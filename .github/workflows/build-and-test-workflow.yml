# This workflow will prepare every thing required to proceed with a PR
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Test

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main

jobs:
  # PREPARE
  prepare:
    env:
      CLONE_URL: ${{ github.event.pull_request.base.repo.clone_url }}
      BRANCH_NAME: ${{ github.head_ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: "Remove label prepared (WORKOROUND TO ENSURE NEXT ADD LABEL EVENT IS TRIGGERED)"
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{secrets.TOKEN}}
          label: prepared
          type: remove
      # CHECKOUT
      - name: "Checkout"
        env:
          TOKEN_SECRET: ${{ secrets.TOKEN }}
        run: |
          authUrl=$(echo "$CLONE_URL" | sed "s|://|://$TOKEN_SECRET@|")
          git clone "$authUrl" repo_folder
          cd repo_folder
          git config --global user.email "cicd@entando.com"
          git config --global user.name "firegloves"
          git config pull.rebase false
          git checkout "$BRANCH_NAME"
          git pull
      # BOM
      - name: "BOM update"
        run: echo 'BOM updated'
      # ADD LABEL PREPARED
      - name: "Add label prepared"
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{secrets.TOKEN}}
          label: prepared
          type: add
  # SONAR
  sonar:
    needs: [ 'prepare' ]
    runs-on: ubuntu-latest
    steps:
      - name: "Check NO-SONAR label"
        env:
          LABELS: ${{ toJson(github.event.pull_request.labels) }}
        id: skip-label-check
        run: |
          SKIP_LABEL=$(jq -r '.[] | select(.name=="no-sonar")' <<< $LABELS)
          if [ -z "$SKIP_LABEL" ]; then EXECUTE_STEP=true; else EXECUTE_STEP=false; fi
          echo "::set-output name=EXECUTE_STEP::$EXECUTE_STEP"
      - uses: actions/checkout@v2
        if: steps.skip-label-check.outputs.EXECUTE_STEP == 'true'
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        if: steps.skip-label-check.outputs.EXECUTE_STEP == 'true'
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        if: steps.skip-label-check.outputs.EXECUTE_STEP == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        if: steps.skip-label-check.outputs.EXECUTE_STEP == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        if: steps.skip-label-check.outputs.EXECUTE_STEP == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      - name: "Remove NO-SONAR label"
        if: steps.skip-label-check.outputs.EXECUTE_STEP != 'true'
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{secrets.TOKEN}}
          label: no-sonar
          type: remove
  # BUILD AND TEST
  tests:
    needs: [ 'prepare' ]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1 # ensure the sequential running of the spawned jobs
      matrix:
        # order matters: spawned jobs are execute as received in the array
        test-type: [ 'fast-test', 'slow-and-fast-test' ]
        include:
          # includes the value of the rebase variable depending on the test type of the matrix
          # includes the dependency between the 2 generated jobs to ensure sequential runs
          - test-type: 'fast-test'
            mvn-test-group: 'fast-test'
            remove-label: false
          - test-type: 'slow-and-fast-test'
            mvn-test-group: 'fast-test,slow-test'
            remove-label: true
    steps:
      - name: "Check NO-TEST label"
        env:
          LABELS: ${{ toJson(github.event.pull_request.labels) }}
        id: skip-label-check
        run: |
          SKIP_LABEL=$(jq '.[] | select(.name=="no-test")' <<< $LABELS)
          if [ -z "$SKIP_LABEL" ]; then EXECUTE_STEP=true; else EXECUTE_STEP=false; fi
          echo "::set-output name=EXECUTE_STEP::$EXECUTE_STEP"
#      - name: "Checkout"
#        if: steps.skip-label-check.outputs.EXECUTE_STEP == 'true'
#        uses: actions/checkout@v2
#      - name: Set up JDK 1.1
#        if: steps.skip-label-check.outputs.EXECUTE_STEP == 'true'
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Run tests with Maven
#        if: steps.skip-label-check.outputs.EXECUTE_STEP == 'true'
#        run: mvn -B test -Dgroups=${{ matrix.mvn-test-group }}
      - name: "Remove NO-TEST label"
        if: steps.skip-label-check.outputs.EXECUTE_STEP != 'true' && matrix.remove-label
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{secrets.TOKEN}}
          label: no-test
          type: remove
  # OWASP
  owasp:
    needs: [ 'prepare' ]
    runs-on: ubuntu-latest
    steps:
      - name: "Check NO-OWASP label"
        env:
          LABELS: ${{ toJson(github.event.pull_request.labels) }}
        id: skip-label-check
        run: |
          SKIP_LABEL=$(jq '.[] | select(.name=="no-owasp")' <<< $LABELS)
          if [ -z "$SKIP_LABEL" ]; then EXECUTE_STEP=true; else EXECUTE_STEP=false; fi
          echo "::set-output name=EXECUTE_STEP::$EXECUTE_STEP"
      - name: "OWASP checks"
        if: steps.skip-label-check.outputs.EXECUTE_STEP == 'true'
        run: |
          echo ${{ steps.skip-label-check.outputs.EXECUTE_STEP }}
          echo 'OWASP CHECKS PASSED '
      - name: "Remove NO-OWASP label"
        if: steps.skip-label-check.outputs.EXECUTE_STEP != 'true'
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{secrets.TOKEN}}
          label: no-owasp
          type: remove
